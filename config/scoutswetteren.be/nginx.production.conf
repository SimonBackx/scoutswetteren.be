# You may add here your
# server {
#   ...
# }
# statements for each of your virtual hosts to this file

##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##
server {
    listen 80;
    listen 443 ssl;
    server_name scoutswetteren.be;
    return 301 https://www.scoutswetteren.be$request_uri;
    ssl_certificate    /etc/letsencrypt/live/scoutswetteren.be-0003/fullchain.pem;
    ssl_certificate_key    /etc/letsencrypt/live/scoutswetteren.be-0003/privkey.pem;
}

server {
    listen 80;
    server_name www.scoutswetteren.be;
    return 301 https://www.scoutswetteren.be$request_uri;
}

server {
    listen 443;
    ssl on;
    ssl_certificate    /etc/letsencrypt/live/scoutswetteren.be-0003/fullchain.pem;
    ssl_certificate_key    /etc/letsencrypt/live/scoutswetteren.be-0003/privkey.pem;
    fastcgi_read_timeout 60;
    root /var/www/scoutswetteren.be/public;
    index index.php index.html index.htm;
    client_max_body_size 22m;

    # Make site accessible from http://localhost/
    server_name www.scoutswetteren.be;

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }

    location ~ \.php$ {
        #try_files $uri =404;
        #fastcgi_split_path_info ^(.+\.php)(/.+)$;
        ##fastcgi_pass  127.0.0.1:9000;
        #fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        #fastcgi_index index.php;
        #include fastcgi_params;

        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
        location / {
                try_files $uri $uri/ /index.php?$query_string;
        }

    
    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    location ~ /\.ht {
        deny all;
    }

    location ~* \.(jpe?g|png|gif|ico|css|js)$ {
        expires 1M;
    }

}

#file server

server {
    listen 80;
    server_name files.scoutswetteren.be;
    return 301 https://files.scoutswetteren.be$request_uri;
}

server {
    listen 443;
    ssl on;
    ssl_certificate    /etc/letsencrypt/live/scoutswetteren.be-0003/fullchain.pem;
    ssl_certificate_key    /etc/letsencrypt/live/scoutswetteren.be-0003/privkey.pem;
    root /var/www/scoutswetteren.be/files;

    # Make site accessible from http://localhost/
    server_name files.scoutswetteren.be;

    expires 1M;
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#   listen 8000;
#   listen somename:8080;
#   server_name somename alias another.alias;
#   root html;
#   index index.html index.htm;
#
#   location / {
#       try_files $uri $uri/ =404;
#   }
#}


# HTTPS server
#
#server {
#   listen 443;
#   server_name localhost;
#
#   root html;
#   index index.html index.htm;
#
#   ssl on;
#   ssl_certificate cert.pem;
#   ssl_certificate_key cert.key;
#
#   ssl_session_timeout 5m;
#
#   ssl_protocols SSLv3 TLSv1 TLSv1.1 TLSv1.2;
#   ssl_ciphers "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
#   ssl_prefer_server_ciphers on;
#
#   location / {
#       try_files $uri $uri/ =404;
#   }
#}
